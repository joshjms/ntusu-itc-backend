# Generated by Django 4.1.13 on 2024-08-08 17:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ULockerConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_price', models.CharField(max_length=20)),
                ('semesterly_price', models.CharField(max_length=20)),
                ('yearly_price', models.CharField(max_length=20)),
                ('qr_code_image', models.ImageField(blank=True, null=True, upload_to='ulocker/qrcodes/')),
            ],
            options={
                'verbose_name': 'ULocker Config',
                'verbose_name_plural': 'ULocker Config',
            },
        ),
        migrations.CreateModel(
            name='ULockerAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_send_creation_email', models.BooleanField(default=True)),
                ('is_send_verification_email', models.BooleanField(default=True)),
                ('is_send_allocation_email', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ULocker Admin',
                'verbose_name_plural': 'ULocker Admins',
            },
        ),
        migrations.CreateModel(
            name='Locker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('passcode', models.CharField(default='', max_length=10)),
                ('is_available', models.BooleanField(default=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ulocker.location')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applicant_name', models.CharField(max_length=50)),
                ('matric_no', models.CharField(max_length=9)),
                ('phone_no', models.CharField(max_length=8, validators=[django.core.validators.RegexValidator(message='Singapore phone number required (8 digits, without the +65)', regex='^[689]\\d{7}$')])),
                ('organization_name', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('withdrawn', 'Withdrawn'), ('rejected', 'Rejected'), ('approved - awaiting payment', 'Approved - Awaiting Payment'), ('approved - awaiting verification', 'Approved - Awaiting Verification'), ('allocated', 'Allocated')], default='pending', max_length=50)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('start_month', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(message='Invalid date format. Date must be MM/YYYY format', regex='^(0[1-9]|1[0-2])/\\d{4}$')])),
                ('duration', models.IntegerField()),
                ('comment', models.CharField(blank=True, max_length=300, null=True)),
                ('locker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ulocker.locker')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
